@using NetCoreCMS.Framework.Utility
@using NetCoreCMS.Framework.Modules

@{
    Layout = Constants.SiteLayoutName;
}

<script>

    var dragSrcEl = null;
    function allowDrop(ev) {
        ev.preventDefault();

    }

    function drag(ev) {
        ev.dataTransfer.setData("divId", ev.target.id);
    }

    function drop(ev) {
        ev.preventDefault();
        var divId = ev.dataTransfer.getData("divId");
        ev.target.appendChild(document.getElementById(divId));
    }
</script>

<div class="row">

    <div class="col-lg-12">
        <div class="col-lg-8">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Widgets
                </div>
                <div class="panel-body">
                    @foreach (IModule item in ViewBag.Modules)
                    {
                        if (item.Widgets.Count > 0)
                        {
                            <div class="col-lg-6">
                                <div id="@item.ModuleId" class="panel panel-primary">
                                    <div class="panel-heading">@item.ModuleTitle</div>
                                    <div class="panel-body"  ondrop="drop(event)" ondragover="allowDrop(event)">
                                        @foreach (IWidget widget in item.Widgets)
                                        { 
                                            <div id="@widget.WidgetId" data-module-id="@item.ModuleId" class="panel panel-default" draggable="true" ondragstart="drag(event)" >
                                                <div class="panel-heading">
                                                    <i class="glyphicon glyphicon-move margin-right-10"></i>&nbsp;@widget.Title
                                                </div>
                                                <div class="panel-body">
                                                     @widget.Description
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-lg-4">

            <div class="panel with-nav-tabs panel-default">
                <div class="panel-heading">
                    
                </div>
                <div class="panel-body">
                    <ul class="nav nav-tabs">
                        @foreach (var layout in GlobalConfig.ActiveTheme.Layouts)
                        {
                            var tabName = "#tab_" + layout.Name.Replace(' ', '_');
                            
                            <li>
                                <a href="@tabName" data-toggle="tab" > @layout.Name </a>
                            </li> 
                        }
                    </ul>
                    <div class="tab-content">
                        <br/>
                        @foreach (var layout in GlobalConfig.ActiveTheme.Layouts)
                        {
                            var tabName = "tab_" + layout.Name.Replace(' ','_');
                            var active = "active";                            
                            <div class="tab-pane @active" id="@tabName">
                                <div>Widget Sections for layout <strong>@layout.Name</strong> </div>
                                @foreach (var zone in layout.WidgetSections)
                                {   
                                    <div class="panel panel-default">
                                        <div class="panel-heading">
                                            @zone
                                        </div>
                                        <div class="panel-body" ondrop="drop(event)" ondragover="allowDrop(event)">
                                            Drop widget here
                                        </div>
                                    </div>
                                }
                            </div> 
                            @if (!string.IsNullOrEmpty(active))
                            {
                                active = "";
                            }
                        } 
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>