@{
    BodyWidth = 12;
    NccTranslator<ThemeResources> _TT = new NccTranslator<ThemeResources>(CurrentLanguage);
}

<meta charset="utf-8" />
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="description" content="@MetaDescription" />
<meta name="keywords" content="@MetaKeyword" />
<meta name="author" content="@MetaAuthor" />
<meta name="application-name" content="@MetaApplicationName" />
<meta name="generator" content="@MetaGenerator" />
<link href="https://fonts.googleapis.com/css?family=Roboto|Roboto+Slab" rel="stylesheet">
@if (string.IsNullOrEmpty(Title))
{
    <title>@ThemeHelper.GetWebSiteTitle()</title>
}
else
{
    if (string.IsNullOrEmpty(ThemeHelper.GetWebSiteTitle()))
    {
        <title>@Title</title>

    }
    else
    {
        <title>@Title - @ThemeHelper.GetWebSiteTitle()</title>
    }
}

@{
    ThemeHelper.RegisterCss("/css/ncc-common.css", NccResource.IncludePosition.Header);
    ThemeHelper.RegisterCss("/lib/css-loader/dist/css-loader.css", NccResource.IncludePosition.Header);
    ThemeHelper.RegisterCss("/Themes/NccSeventeen/css/site.css", NccResource.IncludePosition.Header);
    ThemeHelper.RegisterCss(string.Concat("/Themes/NccSeventeen/css/", ThemeHelper.ActiveTheme.Settings["style"]), NccResource.IncludePosition.Header, string.Concat("v=",ThemeHelper.ActiveTheme.Settings["version"]));

    ThemeHelper.RegisterResource(NccResource.JQuery);
    ThemeHelper.RegisterResource(NccResource.Bootstrap);

    ThemeHelper.RegisterJs("/js/ncc-common.min.js", NccResource.IncludePosition.Header);
    ThemeHelper.RegisterJs("/lib/notifyjs/notify.min.js", NccResource.IncludePosition.Header);
}

