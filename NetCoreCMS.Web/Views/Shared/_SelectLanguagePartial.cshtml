@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.Extensions.Options
@using Microsoft.Extensions.Localization
@using System.Web;
@using System.Net;

@inject IStringLocalizer _T
@inject IOptions<RequestLocalizationOptions> LocOptions


@{   
    var writer = new System.IO.StringWriter();
    Component.InvokeAsync("Language").Result.WriteTo(writer, HtmlEncoder);
    var currentLanguage = writer.GetStringBuilder().ToString();

    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures
        .Select(c => new { Value = c.TwoLetterISOLanguageName.ToLower(), Text = c.NativeName })
        .ToList();
    var selectList = new SelectList(cultureItems,"Value","Text", currentLanguage);

    var returnUrl = WebUtility.UrlDecode(Context.Request.Path);
    if (Context.Request.QueryString.HasValue) {
        var qStr = Context.Request.QueryString.Value;
        returnUrl = returnUrl + WebUtility.UrlDecode(qStr);
    }
    var lang = "";
    if (GlobalContext.WebSite.IsMultiLangual)
    {
        lang = "/" + currentLanguage;
    }
}
<form id="selectLanguage" action="@lang/Home/SetLanguage/" method="post" class="form-inline" role="form" style="display:inline;">
    <div class="form-group">
        <input type="hidden" id="returnUrl" name="returnUrl" value="@returnUrl"/>
        <label for="exampleInputName2">@_T["Language"]</label>
        <select class="btn btn-mini btn-default" name="culture" id="culture" onchange="this.form.submit();"  asp-items="selectList"></select>
    </div>
</form>
